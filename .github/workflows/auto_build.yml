name: 🏷️ Auto Release on Version Bump

on:
  push:
    branches: [ main ]
    paths:
      - 'pom.xml'

jobs:
  check-version:
    runs-on: ubuntu-latest
    outputs:
      version-changed: ${{ steps.version-check.outputs.changed }}
      new-version: ${{ steps.version-check.outputs.version }}
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 2  # Need previous commit to compare
        
    - name: 🔍 Check Version Change
      id: version-check
      run: |
        # Extract current version from pom.xml
        CURRENT_VERSION=$(grep -oP '<version>\K[^<]+' pom.xml | head -1)
        
        # Extract previous version from pom.xml
        git checkout HEAD~1 -- pom.xml
        PREVIOUS_VERSION=$(grep -oP '<version>\K[^<]+' pom.xml | head -1)
        
        # Restore current pom.xml
        git checkout HEAD -- pom.xml
        
        echo "Current version: $CURRENT_VERSION"
        echo "Previous version: $PREVIOUS_VERSION"
        
        if [ "$CURRENT_VERSION" != "$PREVIOUS_VERSION" ]; then
          echo "changed=true" >> $GITHUB_OUTPUT
          echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          echo "Version changed from $PREVIOUS_VERSION to $CURRENT_VERSION"
        else
          echo "changed=false" >> $GITHUB_OUTPUT
          echo "No version change detected"
        fi

  create-tag-and-release:
    runs-on: ubuntu-latest
    needs: check-version
    if: needs.check-version.outputs.version-changed == 'true'
    
    permissions:
      contents: write
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
      
    - name: 🏷️ Create and Push Tag
      run: |
        VERSION="v${{ needs.check-version.outputs.new-version }}"
        echo "Creating tag: $VERSION"
        
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        
        git tag -a "$VERSION" -m "🚀 Release $VERSION"
        git push origin "$VERSION"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
